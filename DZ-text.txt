Домашнее задание
Написать игру "Лото"
Цель: В этой самостоятельной работе тренируем умения: 
1. разбивать программу на классы 
2. у класса создавать свойства, методы, инициализатор 
3. создавать объекты класса 
4. создавать методы доступа 
5. использовать магические методы 


Эти умения нам понадобятся при написании программ на ООП
1. Создать новый проект "Игра лото"
2. Правила игры можно скачать тут: https://drive.google.com/open?id=1bDMcmVfhYaTUw3CB-MV8WtIIXdYEutvX
3. Написать игру лото

Возможные подходы к решению задачи:
1) Проектирование на основании предметной области. Подумать какие объекты есть в игре и какие из них можно перенести в программу. Для них создать классы с соответствующими свойствами и методами. Проверить каждый класс отдельно. Написать программу с помощью этих классов
2) Метод грубой силы + рефакторинг. Написать программу как получится. После этого с помощью принципа DRY убрать дублирование в коде
3) Процедурное программирование
4. Минимальные требования: 2 игрока - человек играет с компьютером
5. (Дополнительно *) возможность выбирать тип обоих игроков (компьютер или человек) таки образом чтобы можно было играть: компьютер - человек, человек - человек, компьютер - компьютер
6. (Дополнительно *) возможность играть для любого количества игроков от 2 и более

7. Сдать дз в виде ссылки на репозиторий

Для тренировки предлагаю пользоваться принципами "чистого" когда, которые разбирали на первом занятии
Критерии оценки: Задание считается выполненным, когда:

Программа работает верно без логических ошибок и ошибок интерпретатора.
Либо в программе есть минимум 2 класса и небольшие логические ошибки.
3 баллов

Дополнительно:
Есть возможность выбирать тип игроков: 3 балла
Есть возможность выбирать количество игроков: 3 балла
Использовано минимум 2 магических метода: 1 балл
Итого 3 + 3 + 3 + 1 = максимально 10 баллов
Рекомендуем сдать до: 22.03.2020


-----------
"""Лото

Правила игры.

Игра состоит из специальных карточек на которых отмечены числа и бочонков с цифрами

Всего 90 бочонков с цифрами от 1 до 90 (В жизни они обычно достаются из мешка чтобы можно было вытянуть случайно)

Каждая карточка содержит 3 строки по 9 клеток. В каждой строке по 5 случайных цифр, 
расположенных по возрастанию. Все цифры в карточке уникальны. Так выглядит пример карточки:

--------------------------
    9 43 62          74 90
 2    27    75 78    82
   41 56 63     76      86 
--------------------------

В игре 2 игрока: пользователь и компьютер (*так же может быть 2 пользователя или 2 компьютера). 
Каждому в начале выдается случайная карточка. 

Каждый ход выбирается один случайный бочонок и выводится на экран.
Также выводятся карточка игрока и карточка компьютера.

Пользователю предлагается зачеркнуть цифру на карточке или продолжить.
Если игрок выбрал "зачеркнуть":
	Если цифра есть на карточке - она зачеркивается и игра продолжается.
	Если цифры на карточке нет - игрок проигрывает и игра завершается.
Если игрок выбрал "продолжить":
	Если цифра есть на карточке - игрок проигрывает и игра завершается.
	Если цифры на карточке нет - игра продолжается.
    
Компьютер всегда правильно зачеркивает свои цифры если они есть и продолжает если их нет
	
Побеждает тот, кто первый закроет все числа на своей карточке.

Пример одного хода (как может выглядеть интерфейс игры):
- (знаком минус) отмечены уже зачеркнутые цифры

Новый бочонок: 70 (осталось 76)
------ Ваша карточка -----
 6  7          49    57 58
   14 26     -    78    85
23 33    38    48    71   
--------------------------
-- Карточка компьютера ---
 7 87     - 14    11      
      16 49    55 88    77    
   15 20     -       76  -
--------------------------
Зачеркнуть цифру? (y/n)

Подсказка: для работы с псевдослучайными числами удобно использовать 
модуль random: http://docs.python.org/3/library/random.html

Подсказка: для написания программы удобно использовать ООП, примеры возможных классов: Игрок, Бочонок, Мешок, Карточка, ... 
Так же можно придумать свою структуру классов либо воспользоваться процедурным программированием

"""

